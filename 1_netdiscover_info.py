# Netdiccover python script

# We will use Netdiscover to discover devices in the local network.


# Import the necessary library
# We will import the 'subprocess' library that allows to spawn new processes, connects to their input/output/error pipes and obtains their return codes, interacting with the operating systemby running external processes and capturing their output.

import subprocess

def run_netdiscover(interface):
    # Linux Command
    command = f"sudo netdiscover -i {interface}"
    try:
        # Run netdiscover with the specified interface and output
        result = subprocess.run(command, shell=True, capture_output=True, text=True, check=True)

        # Wait for the process to complete
        #result.wait()

        # Return output
        return result.stdout

        # Print the output with stdout (standard output)
        print(result.stdout)

    except subprocess.CalledProcessError as e:
        # Handle error if Netdiscover command fails
        print(f"Error executing NetDiscover: {e}")
        print(f"Command output:\n{e.stdout}")
        print(f"Command error:\n{e.stderr}")

        return None

def write_result(output_file, result):
    # Write NetDiscover results to a txt file
    with open(output_file, "a") as result_file:
        result_file.write("\nResult from NetDiscover:\n")
        result_file.write(result)


if __name__ == "__main__":

    # Network interface target
    interface = "eth0"

    # Text file name
    output_file = "vulnerability_report.txt"

    # Run netdiscover function
    result = run_netdiscover(interface)

    # Run write results to file function
    write_result(output_file, result)


